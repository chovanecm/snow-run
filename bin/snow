#!/bin/bash

# SNOW-RUN. Terminal interface to Service-Now.  
# Copyright (C) 2019  Martin Chovanec [chovamar@fit.cvut.cz]

# This program is free software: you can redistribute it and/or modify  
# it under the terms of the GNU General Public License as published by  
# the Free Software Foundation, either version 3 of the License, or  
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,  
# but WITHOUT ANY WARRANTY; without even the implied warranty of  
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License  
# along with this program.  If not, see <https://www.gnu.org/licenses/>.


# ---------------
# This is the entry script for SNOW RUN
# it routes commands to actual scripts that execute them

# Get the directory in which the current script resides. It's not a bullet-proof solution, but it works under normal circumstances
my_dir=$(dirname $0)



# Function that handles what happens when the command starts with snow attachment
function handle_attachment {
    command=$1
    shift
    case $command in
        # known command
        list)
            exec $my_dir/../include/attachment-list.sh "$@"
            ;;
        # nothing or unknown command
        *)
            # if the SNOW_AUTOCOMPLETE variable is set, we just print the options available for snow attachment
            # it is assumed that SNOW_AUTOCOMPLETE is set when bash is trying to offer the user possible commands (autocompletion)
            # see include/autocomplete.sh
            if [[ -n $SNOW_AUTOCOMPLETE ]]
            then
                echo list
                exit 1
            fi
            echo "Available options: list TABLE_NAME" >&2
            exit 1
            ;;
    esac
}

# Handle snow scriptinclude
function handle_scriptinclude {
    command=$1
    shift
    case $command in
        search)
            exec $my_dir/../include/snow-scriptinclude-search.sh "$@"
            ;;
        *)
            if [[ -n $SNOW_AUTOCOMPLETE ]]
            then
                echo search
                exit 1
            fi
            echo "Available options: search SCRIPT_INCLUDE_NAME" >&2
            exit 1
            ;;
    esac
}

# Handle snow table
function handle_table {
    command=$1
    shift
    case $command in
        search)
            exec $my_dir/../include/snow-table-search.sh "$@"
            ;;
        fields)
            exec $my_dir/../include/snow-table-fields.sh "$@"
            ;;
        *)
            if [[ -n $SNOW_AUTOCOMPLETE ]]
            then
                echo "search fields"
                exit 1
            fi
            echo "Available options: $(SNOW_AUTOCOMPLETE=1 handle_table)" >&2
            exit 1
            ;;
    esac
}

# Handle snow record or snow r
function handle_record {
    command=$1
    shift
    case $command in
        search)
            exec $my_dir/../include/snow-record-search.sh "$@"
            ;;
        delete)
            exec $my_dir/../include/snow-record-delete.sh "$@"
            ;;
        *)
            if [[ -n $SNOW_AUTOCOMPLETE ]]
            then
                echo "search delete"
                exit 1
            fi
            echo "Available options: $(SNOW_AUTOCOMPLETE=1 handle_table)" >&2
            exit 1
            ;;
    esac
}


command=$1
shift
# top-level command selection (e.g. snow run, snow login, ...)
case $command in
    login)
        exec $my_dir/../include/snow-login.sh
        ;;
    info)
        exec $my_dir/../include/snow-info.sh
        ;;
    elevate)
        exec $my_dir/../include/snow-elevate.sh
        ;;
    eval)
        exec $my_dir/../include/snow-eval.sh "$@"
        ;;
    e|exec)
        exec $my_dir/../include/snow-exec.sh "$@"
        ;;
    inspect)
        exec $my_dir/../include/snow-inspect.sh "$@"
        ;;
    run)
        exec $my_dir/../include/snow-run.sh "$@"
        ;;
    scriptinclude)
        handle_scriptinclude "$@"
        exit $?
        ;;
    table)
        handle_table "$@"
        exit $?
        ;;
    r|record)
        handle_record "$@"
        exit $?
        ;;
    attachment)
        handle_attachment "$@"
        exit $?
        ;;
    --include-dir|-I)
        echo $my_dir/../include
        exit $?
        ;;
    operators|op)
        echo "Available operators for queries in ServiceNow:"
        OFS="\t" echo "= != > < >= <= != STARTSWITH CONTAINS IN ENDSWITH 'DOES NOT CONTAIN' 'NOT IN'"
        exit
        ;;
    *)
        # is the argument a script in the js directory?
        if [[ -e $my_dir/../js/$command.js ]]
        then
            exec $0 exec "$command" "$@"
        fi
        if [[ -n $SNOW_AUTOCOMPLETE ]]
        then
            echo "--version attachment login info elevate eval exec inspect run scriptinclude table record operators $(cd $my_dir/../js; ls *.js | sed 's/\.js//g' | tr '\n' ' ')"
            exit 1
        fi

        notice="SNOW-RUN  Copyright (C) 2019  Martin Chovanec <martin@chovanecm.cz>
    This program comes with ABSOLUTELY NO WARRANTY; for details refer to GNU GPL.
    This is free software, and you are welcome to redistribute it
    under certain conditions; refer to GNU GPL for details."
        echo "$notice"
        echo ""
        echo "Available options: $(SNOW_AUTOCOMPLETE=1 $0)"
        echo "Full documentation is available in the README.md file as well as on https://github.com/chovanecm/snow-run"
        exit 1
esac

