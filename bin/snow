#!/bin/bash

# SNOW-RUN. Terminal interface to Service-Now.  
# Copyright (C) 2019  Martin Chovanec [chovamar@fit.cvut.cz]

# This program is free software: you can redistribute it and/or modify  
# it under the terms of the GNU General Public License as published by  
# the Free Software Foundation, either version 3 of the License, or  
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,  
# but WITHOUT ANY WARRANTY; without even the implied warranty of  
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License  
# along with this program.  If not, see <https://www.gnu.org/licenses/>.


my_dir=$(dirname $0)

function handle_attachment {
    command=$1
    shift
    case $command in
        list)
            exec $my_dir/../include/attachment-list.sh "$@"
            ;;
        *)
            if [[ -n $SNOW_AUTOCOMPLETE ]]
            then
                echo list
                exit 1
            fi
            echo "Available options: list TABLE_NAME" >&2
            exit 1
            ;;
    esac
}

function handle_scriptinclude {
    command=$1
    shift
    case $command in
        search)
            exec $my_dir/../include/snow-scriptinclude-search.sh "$@"
            ;;
        *)
            if [[ -n $SNOW_AUTOCOMPLETE ]]
            then
                echo search
                exit 1
            fi
            echo "Available options: search SCRIPT_INCLUDE_NAME" >&2
            exit 1
            ;;
    esac
}

function handle_table {
    command=$1
    shift
    case $command in
        search)
            exec $my_dir/../include/snow-table-search.sh "$@"
            ;;
        fields)
            exec $my_dir/../include/snow-table-fields.sh "$@"
            ;;
        *)
            if [[ -n $SNOW_AUTOCOMPLETE ]]
            then
                echo "search fields"
                exit 1
            fi
            echo "Available options: $(SNOW_AUTOCOMPLETE=1 handle_table)" >&2
            exit 1
            ;;
    esac
}

function handle_record {
    command=$1
    shift
    case $command in
        search)
            exec $my_dir/../include/snow-record-search.sh "$@"
            ;;
        delete)
            exec $my_dir/../include/snow-record-delete.sh "$@"
            ;;
        *)
            if [[ -n $SNOW_AUTOCOMPLETE ]]
            then
                echo "search delete"
                exit 1
            fi
            echo "Available options: $(SNOW_AUTOCOMPLETE=1 handle_table)" >&2
            exit 1
            ;;
    esac
}


command=$1
shift

case $command in
    login)
        exec $my_dir/../include/snow-login.sh
        ;;
    info)
        exec $my_dir/../include/snow-info.sh
        ;;
    elevate)
        exec $my_dir/../include/snow-elevate.sh
        ;;
    eval)
        exec $my_dir/../include/snow-eval.sh "$@"
        ;;
    e|exec)
        exec $my_dir/../include/snow-exec.sh "$@"
        ;;
    inspect)
        exec $my_dir/../include/snow-inspect.sh "$@"
        ;;
    run)
        exec $my_dir/../include/snow-run.sh "$@"
        ;;
    scriptinclude)
        handle_scriptinclude "$@"
        exit $?
        ;;
    table)
        handle_table "$@"
        exit $?
        ;;
    r|record)
        handle_record "$@"
        exit $?
        ;;
    attachment)
        handle_attachment "$@"
        exit $?
        ;;
    *)
        # is it a script?
        if [[ -e $my_dir/../js/$command.js ]]
        then
            exec $0 exec "$command" "$@"
        fi
        if [[ -n $SNOW_AUTOCOMPLETE ]]
        then
            echo " attachment login info elevate eval exec inspect run scriptinclude table record $(cd $my_dir/../js; ls *.js | sed 's/\.js//g')"
            exit 1
        fi
        echo "Available options: $(SNOW_AUTOCOMPLETE=1 $0)"
        exit 1
esac



# POSITIONAL_ARGS=()
# while [[ $# -gt 0]]
# do
#     key="$1"
#     case $key in
#     login)

#     esac #lol
# done
# # restore positional parameters
# set -- "${POSITIONAL_ARGS[@]"